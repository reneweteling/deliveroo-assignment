# mostly generated by copilot, changed to my liking to make sure my class is secure.

require_relative '../src/cron_parser'

RSpec.describe CronParser do
  describe '.parse_field' do
    it 'handles asterisk' do
      expect(CronParser.parse_field('*', 0, 59)).to eq((0..59).to_a)
    end

    it 'handles single number' do
      expect(CronParser.parse_field('5', 0, 59)).to eq([5])
    end

    it 'handles range' do
      expect(CronParser.parse_field('1-5', 0, 59)).to eq([1, 2, 3, 4, 5])
    end

    it 'handles list' do
      expect(CronParser.parse_field('1,3,5', 0, 59)).to eq([1, 3, 5])
    end

    it 'handles step' do
      expect(CronParser.parse_field('*/15', 0, 59)).to eq([0, 15, 30, 45])
    end

    it 'handles complex expression' do
      expect(CronParser.parse_field('1-5,*/15,30-35', 0, 59)).to eq([0, 1, 2, 3, 4, 5, 15, 30, 31, 32, 33, 34, 35, 45])
    end
  end

  describe '.parse_cron' do
    it 'parses a full cron string correctly' do
      result = CronParser.parse_cron('*/15 0 1,15 * 1-5 /usr/bin/find')
      expect(result).to eq([
        ['minute', [0, 15, 30, 45]],
        ['hour', [0]],
        ['day of month', [1, 15]],
        ['month', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
        ['day of week', [1, 2, 3, 4, 5]],
        ['command', ['/usr/bin/find']]
      ])
    end
  end

  describe '.print_cron' do
    it 'formats output correctly' do
      result = CronParser.print_cron('*/15 0 1,15 * 1-5 /usr/bin/find')
      expected_output = [
        "minute        0 15 30 45",
        "hour          0",
        "day of month  1 15",
        "month         1 2 3 4 5 6 7 8 9 10 11 12",
        "day of week   1 2 3 4 5",
        "command       /usr/bin/find"
      ].join("\n")
      expect(result).to eq(expected_output)
    end
  end
end
